{"version":3,"sources":["services/history.js","components/MainPanel.jsx","components/Register.jsx","components/Header.jsx","components/Login.jsx","App.js","serviceWorker.js","reducers/index.js","reducers/user.js","store.js","index.js"],"names":["createBrowserHistory","MainPanel","state","react_default","a","createElement","className","Component","Register","class","method","type","name","placeholder","Header","react_router_dom","to","Login","href","App","react_router","history","components_Header","exact","path","component","Boolean","window","location","hostname","match","combineReducers","user","arguments","length","undefined","id","token","store","createStore","reducers","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b765c4e.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react';\r\nclass MainPanel extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div className=\"mainPage\">\r\n\r\n                <div className=\"welcomePanel\">\r\n                    <div>\r\n\r\n\r\n                        <h2 className=\"text-center\">\r\n                            Witaj na stronie !\r\n                        </h2>\r\n\r\n                         <h3 className=\"text-center text-light\">\r\n                            Śmiało, zaloguj się !\r\n                        </h3> \r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default MainPanel;","import React, { Component } from 'react';\r\nclass Register extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n            <div class=\"login-dark\">\r\n\r\n                <form method=\"post\">\r\n                    <h3 className=\"text-center text-secondary\">\r\n                        Rejestracja\r\n                    </h3>\r\n                    <h2 class=\"sr-only\">Login Form</h2>\r\n\r\n                    <div class=\"illustration\">\r\n                        <i class=\"icon ion-ios-locked-outline\"></i>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <input class=\"form-control\" type=\"text\" name=\"login\" placeholder=\"Login\" />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <input class=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <input class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Hasło\" />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <button class=\"btn btn-primary btn-block\" type=\"submit\">\r\n                            Zarejestruj\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Register;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"header  text-light d-flex justify-content-between align-items-center\">\r\n\r\n\r\n                <Link to={'/'}>\r\n                     <h4>ToDo App</h4>\r\n                </Link>\r\n\r\n                <div>\r\n                    <Link to={\"/logowanie\"} className=\"ml-2\">\r\n                        Logowanie\r\n                    </Link>\r\n\r\n                    <Link to={\"/rejestracja\"} className=\"ml-2\">\r\n                        Rejestracja\r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nclass Login extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"login-dark\">\r\n\r\n                    <form method=\"post\">\r\n                        <h3 className=\"text-center text-secondary\">\r\n                            Logowanie\r\n                        </h3>\r\n                        <h2 class=\"sr-only\">Login Form</h2>\r\n\r\n                        <div class=\"illustration\">\r\n                            <i class=\"icon ion-ios-locked-outline\"></i>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <input class=\"form-control\" type=\"text\" name=\"email\" placeholder=\"Login\" />\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <input class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <button class=\"btn btn-primary btn-block\" type=\"submit\">\r\n                                Loguj\r\n                            </button>\r\n                        </div>\r\n                        <a href=\"#\" class=\"forgot\">Zapomniałeś hasła ?</a>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\nimport { Router, Route } from 'react-router-dom';\n\nimport history from './services/history';\nimport MainPanel from './components/MainPanel'\nimport Register from './components/Register'\nimport Header from './components/Header';\nimport Login from './components/Login'\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/myStyles.css';\nimport './styles/main.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router history={history}>\n            <div className=\"app overflow-hidden bgc262626 hv-100\">\n              <Header/>\n               \n                {/* Main */}\n                <div  className=\"container-fluid p-0\">\n\n                            {/* Routing */}\n                            <Route   exact path=\"/\" component={MainPanel} />\n                            <Route   exact path=\"/logowanie\" component={Login} />\n                            <Route   exact path=\"/rejestracja\" component={Register} />\n\n                            {/* ------------------------------------------------- */}\n\n                </div>\n            </div>\n        </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport {user} from './user';\r\n\r\nexport default combineReducers({\r\n    user\r\n});","export const user = (state = {\r\n    id  : '',\r\n    token : ''\r\n},action)=>{\r\n\r\n    switch(action.type){\r\n        default :\r\n            return state;\r\n    }\r\n}","import {createStore} from 'redux'\r\nimport reducers from './reducers'\r\n\r\nexport const store = createStore(reducers);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport {store} from './store'\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}